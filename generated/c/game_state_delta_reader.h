#ifndef GAME_STATE_DELTA_READER_H
#define GAME_STATE_DELTA_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct Vec2_table *Vec2_table_t;
typedef struct Vec2_table *Vec2_mutable_table_t;
typedef const flatbuffers_uoffset_t *Vec2_vec_t;
typedef flatbuffers_uoffset_t *Vec2_mutable_vec_t;
typedef const struct FlagUpdate_table *FlagUpdate_table_t;
typedef struct FlagUpdate_table *FlagUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *FlagUpdate_vec_t;
typedef flatbuffers_uoffset_t *FlagUpdate_mutable_vec_t;
typedef const struct EntityUpdate_table *EntityUpdate_table_t;
typedef struct EntityUpdate_table *EntityUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *EntityUpdate_vec_t;
typedef flatbuffers_uoffset_t *EntityUpdate_mutable_vec_t;
typedef const struct BlockUpdate_table *BlockUpdate_table_t;
typedef struct BlockUpdate_table *BlockUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *BlockUpdate_vec_t;
typedef flatbuffers_uoffset_t *BlockUpdate_mutable_vec_t;
typedef const struct ShieldUpdate_table *ShieldUpdate_table_t;
typedef struct ShieldUpdate_table *ShieldUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *ShieldUpdate_vec_t;
typedef flatbuffers_uoffset_t *ShieldUpdate_mutable_vec_t;
typedef const struct MissileSlotUpdate_table *MissileSlotUpdate_table_t;
typedef struct MissileSlotUpdate_table *MissileSlotUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *MissileSlotUpdate_vec_t;
typedef flatbuffers_uoffset_t *MissileSlotUpdate_mutable_vec_t;
typedef const struct TurretUpdate_table *TurretUpdate_table_t;
typedef struct TurretUpdate_table *TurretUpdate_mutable_table_t;
typedef const flatbuffers_uoffset_t *TurretUpdate_vec_t;
typedef flatbuffers_uoffset_t *TurretUpdate_mutable_vec_t;
typedef const struct Explosion_table *Explosion_table_t;
typedef struct Explosion_table *Explosion_mutable_table_t;
typedef const flatbuffers_uoffset_t *Explosion_vec_t;
typedef flatbuffers_uoffset_t *Explosion_mutable_vec_t;
typedef const struct NewProjectile_table *NewProjectile_table_t;
typedef struct NewProjectile_table *NewProjectile_mutable_table_t;
typedef const flatbuffers_uoffset_t *NewProjectile_vec_t;
typedef flatbuffers_uoffset_t *NewProjectile_mutable_vec_t;
typedef const struct DeadProjectile_table *DeadProjectile_table_t;
typedef struct DeadProjectile_table *DeadProjectile_mutable_table_t;
typedef const flatbuffers_uoffset_t *DeadProjectile_vec_t;
typedef flatbuffers_uoffset_t *DeadProjectile_mutable_vec_t;
typedef const struct GameStateDelta_table *GameStateDelta_table_t;
typedef struct GameStateDelta_table *GameStateDelta_mutable_table_t;
typedef const flatbuffers_uoffset_t *GameStateDelta_vec_t;
typedef flatbuffers_uoffset_t *GameStateDelta_mutable_vec_t;
#ifndef Vec2_file_identifier
#define Vec2_file_identifier 0
#endif
/* deprecated, use Vec2_file_identifier */
#ifndef Vec2_identifier
#define Vec2_identifier 0
#endif
#define Vec2_type_hash ((flatbuffers_thash_t)0x2c3c5815)
#define Vec2_type_identifier "\x15\x58\x3c\x2c"
#ifndef Vec2_file_extension
#define Vec2_file_extension "bin"
#endif
#ifndef FlagUpdate_file_identifier
#define FlagUpdate_file_identifier 0
#endif
/* deprecated, use FlagUpdate_file_identifier */
#ifndef FlagUpdate_identifier
#define FlagUpdate_identifier 0
#endif
#define FlagUpdate_type_hash ((flatbuffers_thash_t)0x5571db46)
#define FlagUpdate_type_identifier "\x46\xdb\x71\x55"
#ifndef FlagUpdate_file_extension
#define FlagUpdate_file_extension "bin"
#endif
#ifndef EntityUpdate_file_identifier
#define EntityUpdate_file_identifier 0
#endif
/* deprecated, use EntityUpdate_file_identifier */
#ifndef EntityUpdate_identifier
#define EntityUpdate_identifier 0
#endif
#define EntityUpdate_type_hash ((flatbuffers_thash_t)0xf2e4eab3)
#define EntityUpdate_type_identifier "\xb3\xea\xe4\xf2"
#ifndef EntityUpdate_file_extension
#define EntityUpdate_file_extension "bin"
#endif
#ifndef BlockUpdate_file_identifier
#define BlockUpdate_file_identifier 0
#endif
/* deprecated, use BlockUpdate_file_identifier */
#ifndef BlockUpdate_identifier
#define BlockUpdate_identifier 0
#endif
#define BlockUpdate_type_hash ((flatbuffers_thash_t)0x6d525c7b)
#define BlockUpdate_type_identifier "\x7b\x5c\x52\x6d"
#ifndef BlockUpdate_file_extension
#define BlockUpdate_file_extension "bin"
#endif
#ifndef ShieldUpdate_file_identifier
#define ShieldUpdate_file_identifier 0
#endif
/* deprecated, use ShieldUpdate_file_identifier */
#ifndef ShieldUpdate_identifier
#define ShieldUpdate_identifier 0
#endif
#define ShieldUpdate_type_hash ((flatbuffers_thash_t)0x711dcf31)
#define ShieldUpdate_type_identifier "\x31\xcf\x1d\x71"
#ifndef ShieldUpdate_file_extension
#define ShieldUpdate_file_extension "bin"
#endif
#ifndef MissileSlotUpdate_file_identifier
#define MissileSlotUpdate_file_identifier 0
#endif
/* deprecated, use MissileSlotUpdate_file_identifier */
#ifndef MissileSlotUpdate_identifier
#define MissileSlotUpdate_identifier 0
#endif
#define MissileSlotUpdate_type_hash ((flatbuffers_thash_t)0x6471b51e)
#define MissileSlotUpdate_type_identifier "\x1e\xb5\x71\x64"
#ifndef MissileSlotUpdate_file_extension
#define MissileSlotUpdate_file_extension "bin"
#endif
#ifndef TurretUpdate_file_identifier
#define TurretUpdate_file_identifier 0
#endif
/* deprecated, use TurretUpdate_file_identifier */
#ifndef TurretUpdate_identifier
#define TurretUpdate_identifier 0
#endif
#define TurretUpdate_type_hash ((flatbuffers_thash_t)0x5140d966)
#define TurretUpdate_type_identifier "\x66\xd9\x40\x51"
#ifndef TurretUpdate_file_extension
#define TurretUpdate_file_extension "bin"
#endif
#ifndef Explosion_file_identifier
#define Explosion_file_identifier 0
#endif
/* deprecated, use Explosion_file_identifier */
#ifndef Explosion_identifier
#define Explosion_identifier 0
#endif
#define Explosion_type_hash ((flatbuffers_thash_t)0x88a79680)
#define Explosion_type_identifier "\x80\x96\xa7\x88"
#ifndef Explosion_file_extension
#define Explosion_file_extension "bin"
#endif
#ifndef NewProjectile_file_identifier
#define NewProjectile_file_identifier 0
#endif
/* deprecated, use NewProjectile_file_identifier */
#ifndef NewProjectile_identifier
#define NewProjectile_identifier 0
#endif
#define NewProjectile_type_hash ((flatbuffers_thash_t)0xed9ff94e)
#define NewProjectile_type_identifier "\x4e\xf9\x9f\xed"
#ifndef NewProjectile_file_extension
#define NewProjectile_file_extension "bin"
#endif
#ifndef DeadProjectile_file_identifier
#define DeadProjectile_file_identifier 0
#endif
/* deprecated, use DeadProjectile_file_identifier */
#ifndef DeadProjectile_identifier
#define DeadProjectile_identifier 0
#endif
#define DeadProjectile_type_hash ((flatbuffers_thash_t)0xed25a49c)
#define DeadProjectile_type_identifier "\x9c\xa4\x25\xed"
#ifndef DeadProjectile_file_extension
#define DeadProjectile_file_extension "bin"
#endif
#ifndef GameStateDelta_file_identifier
#define GameStateDelta_file_identifier 0
#endif
/* deprecated, use GameStateDelta_file_identifier */
#ifndef GameStateDelta_identifier
#define GameStateDelta_identifier 0
#endif
#define GameStateDelta_type_hash ((flatbuffers_thash_t)0xdcc9188e)
#define GameStateDelta_type_identifier "\x8e\x18\xc9\xdc"
#ifndef GameStateDelta_file_extension
#define GameStateDelta_file_extension "bin"
#endif



struct Vec2_table { uint8_t unused__; };

static inline size_t Vec2_vec_len(Vec2_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Vec2_table_t Vec2_vec_at(Vec2_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Vec2_table_t, vec, i, 0)
__flatbuffers_table_as_root(Vec2)

__flatbuffers_define_scalar_field(0, Vec2, x, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(1, Vec2, y, flatbuffers_float, float, 0.00000000f)

struct FlagUpdate_table { uint8_t unused__; };

static inline size_t FlagUpdate_vec_len(FlagUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline FlagUpdate_table_t FlagUpdate_vec_at(FlagUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(FlagUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(FlagUpdate)

__flatbuffers_define_scalar_field(0, FlagUpdate, owner_id, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, FlagUpdate, x, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(2, FlagUpdate, y, flatbuffers_float, float, 0.00000000f)

struct EntityUpdate_table { uint8_t unused__; };

static inline size_t EntityUpdate_vec_len(EntityUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline EntityUpdate_table_t EntityUpdate_vec_at(EntityUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(EntityUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(EntityUpdate)

__flatbuffers_define_scalar_field(0, EntityUpdate, id, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_scalar_field(1, EntityUpdate, x, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(2, EntityUpdate, y, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(3, EntityUpdate, rotation, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_vector_field(4, EntityUpdate, block_update, BlockUpdate_vec_t, 0)
__flatbuffers_define_vector_field(5, EntityUpdate, shield_updates, ShieldUpdate_vec_t, 0)
__flatbuffers_define_vector_field(6, EntityUpdate, missile_slot_updates, MissileSlotUpdate_vec_t, 0)
__flatbuffers_define_vector_field(7, EntityUpdate, turret_updates, TurretUpdate_vec_t, 0)

struct BlockUpdate_table { uint8_t unused__; };

static inline size_t BlockUpdate_vec_len(BlockUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline BlockUpdate_table_t BlockUpdate_vec_at(BlockUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(BlockUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(BlockUpdate)

__flatbuffers_define_scalar_field(0, BlockUpdate, block_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, BlockUpdate, hitpoints, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(2, BlockUpdate, applied_thrust, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(3, BlockUpdate, is_destroyed, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))

struct ShieldUpdate_table { uint8_t unused__; };

static inline size_t ShieldUpdate_vec_len(ShieldUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline ShieldUpdate_table_t ShieldUpdate_vec_at(ShieldUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(ShieldUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(ShieldUpdate)

__flatbuffers_define_scalar_field(0, ShieldUpdate, block_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, ShieldUpdate, hitpoints, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(2, ShieldUpdate, rotation, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(3, ShieldUpdate, is_destroyed, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))

struct MissileSlotUpdate_table { uint8_t unused__; };

static inline size_t MissileSlotUpdate_vec_len(MissileSlotUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline MissileSlotUpdate_table_t MissileSlotUpdate_vec_at(MissileSlotUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(MissileSlotUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(MissileSlotUpdate)

__flatbuffers_define_scalar_field(0, MissileSlotUpdate, block_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, MissileSlotUpdate, slot_index, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, MissileSlotUpdate, is_loaded, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(3, MissileSlotUpdate, local_rotation, flatbuffers_float, float, 0.00000000f)

struct TurretUpdate_table { uint8_t unused__; };

static inline size_t TurretUpdate_vec_len(TurretUpdate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline TurretUpdate_table_t TurretUpdate_vec_at(TurretUpdate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(TurretUpdate_table_t, vec, i, 0)
__flatbuffers_table_as_root(TurretUpdate)

__flatbuffers_define_scalar_field(0, TurretUpdate, block_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, TurretUpdate, local_rotation, flatbuffers_float, float, 0.00000000f)

struct Explosion_table { uint8_t unused__; };

static inline size_t Explosion_vec_len(Explosion_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Explosion_table_t Explosion_vec_at(Explosion_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Explosion_table_t, vec, i, 0)
__flatbuffers_table_as_root(Explosion)

__flatbuffers_define_scalar_field(0, Explosion, x, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(1, Explosion, y, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(2, Explosion, radius, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(3, Explosion, damage, flatbuffers_float, float, 0.00000000f)

struct NewProjectile_table { uint8_t unused__; };

static inline size_t NewProjectile_vec_len(NewProjectile_vec_t vec)
__flatbuffers_vec_len(vec)
static inline NewProjectile_table_t NewProjectile_vec_at(NewProjectile_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(NewProjectile_table_t, vec, i, 0)
__flatbuffers_table_as_root(NewProjectile)

__flatbuffers_define_scalar_field(0, NewProjectile, id, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_table_field(1, NewProjectile, position, Vec2_table_t, 0)
__flatbuffers_define_table_field(2, NewProjectile, linear_velocity, Vec2_table_t, 0)
__flatbuffers_define_scalar_field(3, NewProjectile, damage, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(4, NewProjectile, size, flatbuffers_float, float, 0.00000000f)

struct DeadProjectile_table { uint8_t unused__; };

static inline size_t DeadProjectile_vec_len(DeadProjectile_vec_t vec)
__flatbuffers_vec_len(vec)
static inline DeadProjectile_table_t DeadProjectile_vec_at(DeadProjectile_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(DeadProjectile_table_t, vec, i, 0)
__flatbuffers_table_as_root(DeadProjectile)

__flatbuffers_define_scalar_field(0, DeadProjectile, id, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_table_field(1, DeadProjectile, position, Vec2_table_t, 0)

struct GameStateDelta_table { uint8_t unused__; };

static inline size_t GameStateDelta_vec_len(GameStateDelta_vec_t vec)
__flatbuffers_vec_len(vec)
static inline GameStateDelta_table_t GameStateDelta_vec_at(GameStateDelta_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(GameStateDelta_table_t, vec, i, 0)
__flatbuffers_table_as_root(GameStateDelta)

__flatbuffers_define_vector_field(0, GameStateDelta, flag_positions, FlagUpdate_vec_t, 0)
__flatbuffers_define_vector_field(1, GameStateDelta, entity_positions, EntityUpdate_vec_t, 0)
__flatbuffers_define_vector_field(2, GameStateDelta, new_projectiles, NewProjectile_vec_t, 0)
__flatbuffers_define_vector_field(3, GameStateDelta, dead_projectiles, DeadProjectile_vec_t, 0)
__flatbuffers_define_vector_field(4, GameStateDelta, explosions, Explosion_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* GAME_STATE_DELTA_READER_H */
